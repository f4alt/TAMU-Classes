// function ; inputs ; outputs
// inputs are comma separated, in the same order as function parameters

// amax testcases
// amax ; x, len ; expected return value
amax ; 8 6 7 5 3 0 9 , 7 ; 6 // example testcase
maximus ; 8 6 7 5 3 0 9 , 7 ; 6 // same testcase, with spell name
amax ; -9 -8 -7 -5 , 4 ; 0 // max value is negative
amax ; 0 0 0 0 0 , 5 ; 0 // max value is 0
amax ; 1 , 1 ; 0 // vector has one element
amax ;  , 0 ; -1 // empty input
amax ; 0.5 0.6 0.7 , 3 ; 2 // numbers with fractional parts


// asum testcases
// asum ; x, len ; expected return value
asum ; 0 , 1 ; 0 // sum is 0
asum ; 8 6 7 5 3 0 9 , 7 ; 38 // sum is positive
asum ; -1 -2 -3 , 3 ; 6 // sum is negative
asum ;  , 0 ; 0 // empty input 



// axpy testcases
// axpy ; a, x, y, len ; expected y
axpy ; -1 , 1 2 3 4 , 1 2 3 4 , 4 ; 0 0 0 0 // scalar is negative
axpy ; 0 , 1 2 3 4 , 1 2 3 4 , 4 ; 1 2 3 4 // scalar is zero
axpy ; 2 , 1 2 3 4 , 1 2 3 4 , 4 ; 3 6 9 12 // scalar is >1
axpy ; 1 ,  ,  , 0 ;  // empty input
axpy ; 1 , -1 -2 -3 , -9 -8 -7 , 3 ; -10 -10 -10 // negative values


// copy testcases
// copy ; x, y, len ; expected y
copy ; 1 2 3 4 , 0 0 0 0 , 4 ; 1 2 3 4
copy ;  ,  , 0 ;  // empty input
copy ; -1 -2 -3 -4 , 0 0 0 0 , 4 ; -1 -2 -3 -4 // negative values



// dot testcases
// dot ; x, y, len ; expected return value
dot ; -1 -2 -3 , 1 2 3 , 3 ; -14 // result is negative
dot ; 1 2 3 , 3 3 -3 , 3 ; 0 // result is 0
dot ; 1 2 3 , 1 5 7 , 3 ; 32 // result is positive
dot ;  ,  , 0 ; 0 // empty input



// norm2 testcases
// norm2 ; x, len ; expected return value
norm2 ; 0 , 1 ; 0 // result is 0
norm2 ; 3 4 , 2 ; 5 // result is positive
norm2 ;  , 0 ; 0 // empty input
norm2 ; -3 -4 , 2 ; 5 // negative values



// scale testcases
// scale ; a, x, len ; expected x
scale ; -1 , 1 2 3 4 , 4 ; -1 -2 -3 -4 // scalar is negative
scale ; 0 , 1 2 3 4 , 4 ; 0 0 0 0 // scalar is 0
scale ; 2 , 1 2 3 4 , 4 ; 2 4 6 8 // scalar is >1
scale ; 1 ,  , 0 ;  // empty input
scale ; 1 , -1 -2 -3 -4 , 4 ; -1 -2 -3 -4 // negative values



// swap testcases
// swap ; x, y, len ; expected x, expected y
swap ; 1 2 3 4 , 9 8 7 6 , 4 ; 9 8 7 6 , 1 2 3 4
swap ;  ,  , 0 ;  ,  // empty inputs
swap ; -1 -2 -3 -4 , -9 -8 -7 -6 , 4 ; -9 -8 -7 -6 , -1 -2 -3 -4 // neg values
